
@{
    ViewBag.Title = "Create";
    var buyers = (List<Store.Core.Models.Buyer>)@ViewBag.Buyers;
    var list = new MultiSelectList(buyers, "Id", "BuyerName");
}
@model Store.Web.ViewModels.PencilViewModel


<div class="container">
    <a href="/">Back</a> <h2 data-bind="text: Title"></h2>
 
        @using (Html.BeginForm("Create", "Pencil", FormMethod.Post, new { encType = "multipart/form-data" }))
        {
            <div class="form-group">
                <label for="Name">Title</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label for="Price">Price</label>
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label for="Price">Description</label>
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label for="fileImage">Pencil image</label>
                @Html.TextBoxFor(m=>m.File, new { @class = "form-control-file", @type = "file" })
                <small id="fileHelp" class="form-text text-muted">Pencil image will be uploaded on Submit</small>
            </div>
            <div class="form-group">
                <label for="buyers">Select all buyers that apply</label>
                @Html.ListBoxFor(m => m.Buyers, list, new { @class = "form-control" })
            </div>
            <button class="btn btn-primary" type="submit">Submit</button>

        }

   
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/ViewModel/PencilVM.js")
}
